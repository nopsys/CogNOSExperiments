<<Overview-Performance, echo=FALSE, message=FALSE>>=
knitr::opts_chunk$set(fig.width=10, fig.height=5,
                      echo=FALSE, warning=FALSE, message=FALSE, results="asis")

steady <- getWarmedupData(paste(root_path, "data/basicPerformance.data",sep="/"), c("Value", "Benchmark", "VM", "Suite", "Iteration"), 
                          vmNamesMap(), 
                          c("Cog-Int", "Pharo-JitR", "CogNos-Int", "CogNos-Jit"),
                          numberOfIterationsPerBenchmark,
                          10)

baselineJit <- steady[steady$VM == "Pharo-JitR",]
baselineInt <- steady[steady$VM == "Cog-Int",]

steady <- steady[steady$Benchmark != "Json",]

steadyInt <- steady[steady$VM == "Cog-Int" | steady$VM == "CogNos-Int",]
steadyJIT <- steady[steady$VM == "Pharo-JitR" | steady$VM == "CogNos-Jit",]

summarizedPerBenchAndVMJit <- summarizedPerBenchmark(steadyJIT, c(0,10000), baselineJit, "Pharo-JitR")

summarizedPerBenchAndVMInt <- summarizedPerBenchmark(steadyInt, c(0,10000), baselineInt, "Cog-Int")

vm_colors <- brewer.pal(12, "Paired")  # to replace scale_fill_brewer(type = "qual", palette = "Paired")

summarizedPerBenchAndVM <- rbind(summarizedPerBenchAndVMInt, summarizedPerBenchAndVMJit)

names(vm_colors) <- vmNamesMap()

@
\def\BasicPerformancePlot{%
<<basic-performance-overview, fig.width=5, fig.height=2, fig.cap='Overall overhead factor of 12 benchmarks on \\COGNOS vs Cog with Ubuntu 17.10 for both, interpreted and JIT versions. Benchmarks were selected from~\\citet{marr:2016:ccb}.', out.width = "0.95\\linewidth", fig.align="center">>=
overview_box_plot(summarizedPerBenchAndVM, c(0.8,1.3))
@
}%

\def\BasicPerformanceTableSummary{%
<<basic-performance-summary-table>>=
awfTableData <- summarizedPerBenchAndVM[,c(2,1,3,4:8)]
print(
  kable(arrange(awfTableData, Benchmark), 
       booktabs = T,
       format = "latex",
       longtable = T,
       caption = "Baseline Results",
       digits = 2)  %>%
       kable_styling(latex_options = c("repeat_header"), font_size = 7)  %>%
       collapse_rows(columns = 1:2))
@
}

\def\BasicPerformanceTableOverall{%
<<basic-performance-overall-table>>=
awfOverall <- summarizeOverall(awfTableData, ~ VM)
colnames <- c("Runtime", "OF","CI-95%","Sd.", "Min","Max", "Median")
kable(arrange(awfOverall, Geomean), 
       booktabs = T,
       format = "latex",
       digits = 2,
       caption = "Overall Baseline Results",
       col.names=colnames
      )  %>%
       kable_styling(latex_options = c("repeat_header"), font_size = 8)
@
}

\def\CogIntMean{%
<<cog-int-mean-performance>>=
cat(round(awfOverall$Geomean[awfOverall$VM == "Cog-Int"], digits=2))
cat("\\xspace")
@
}

\def\NosIntMean{%
<<nos-int-mean-performance>>=
cat(round(awfOverall$Geomean[awfOverall$VM == "CogNos-Int"], digits=2))
cat("\\xspace")
@
}

\def\NosJitMean{%
<<nos-jit-mean-performance>>=
cat(round(awfOverall$Geomean[awfOverall$VM == "CogNos-Jit"], digits=2))
cat("\\xspace")
@
}
